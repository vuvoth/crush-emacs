{"version":3,"sources":["../src/reference.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA;;;;;;IAMqB,S;;;;;AAEjB;;;;+BAIO;AACH,mBAAO,KAAK,KAAZ;AACH;;AAED;;;;;;;4CAIoB;AAChB,mBAAO,KAAK,kBAAZ;AACH;;AAED;;;;;;;;;;;;AASA,uBAAY,IAAZ,EAAkB,iBAAlB,EAAqC;AAAA;;AACjC,YAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,OAA7B,EAAsC;AAClC,gBAAI,EAAE,uDAA4C,2CAA9C,CAAJ,EAAsF;AAClF,sBAAM,IAAI,KAAJ,CAAU,0DAAV,CAAN;AACH;AACJ;AACD,aAAK,KAAL,GAAa,IAAb;AACA,aAAK,kBAAL,GACQ,8CACA,kBAAkB,OAAlB,EADA,GAEA,iBAHR;AAIH;;;;;kBAtCgB,S","file":"reference.js","sourcesContent":["import Span from './span';\nimport SpanContext from './span_context';\n\n/**\n * Reference pairs a reference type constant (e.g., REFERENCE_CHILD_OF or\n * REFERENCE_FOLLOWS_FROM) with the SpanContext it points to.\n *\n * See the exported childOf() and followsFrom() functions at the package level.\n */\nexport default class Reference {\n\n    /**\n     * @return {string} The Reference type (e.g., REFERENCE_CHILD_OF or\n     *         REFERENCE_FOLLOWS_FROM).\n     */\n    type() {\n        return this._type;\n    }\n\n    /**\n     * @return {SpanContext} The SpanContext being referred to (e.g., the\n     *         parent in a REFERENCE_CHILD_OF Reference).\n     */\n    referencedContext() {\n        return this._referencedContext;\n    }\n\n    /**\n     * Initialize a new Reference instance.\n     *\n     * @param {string} type - the Reference type constant (e.g.,\n     *        REFERENCE_CHILD_OF or REFERENCE_FOLLOWS_FROM).\n     * @param {SpanContext} referencedContext - the SpanContext being referred\n     *        to. As a convenience, a Span instance may be passed in instead\n     *        (in which case its .context() is used here).\n     */\n    constructor(type, referencedContext) {\n        if (process.env.NODE_ENV === 'debug') {\n            if (!(referencedContext instanceof SpanContext || referencedContext instanceof Span)) {\n                throw new Error('referencedContext must be a Span or SpanContext instance');\n            }\n        }\n        this._type = type;\n        this._referencedContext = (\n                referencedContext instanceof Span ?\n                referencedContext.context() :\n                referencedContext);\n    }\n}\n"]}
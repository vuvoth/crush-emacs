{"version":3,"sources":["../src/functions.js"],"names":[],"mappings":";;;;;QAWgB,O,GAAA,O;QAeA,W,GAAA,W;;AA1BhB;;IAAY,S;;AACZ;;;;AACA;;;;;;;;AAEA;;;;;;;AAOO,SAAS,OAAT,CAAiB,WAAjB,EAA8B;AACjC;AACA,QAAI,qCAAJ,EAAiC;AAC7B,sBAAc,YAAY,OAAZ,EAAd;AACH;AACD,WAAO,wBAAc,UAAU,kBAAxB,EAA4C,WAA5C,CAAP;AACH;;AAED;;;;;;;AAOO,SAAS,WAAT,CAAqB,WAArB,EAAkC;AACrC;AACA,QAAI,qCAAJ,EAAiC;AAC7B,sBAAc,YAAY,OAAZ,EAAd;AACH;AACD,WAAO,wBAAc,UAAU,sBAAxB,EAAgD,WAAhD,CAAP;AACH","file":"functions.js","sourcesContent":["import * as Constants from './constants';\nimport Span from './span';\nimport Reference from './reference';\n\n/**\n * Return a new REFERENCE_CHILD_OF reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_CHILD_OF reference pointing to `spanContext`\n */\nexport function childOf(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof Span) {\n        spanContext = spanContext.context();\n    }\n    return new Reference(Constants.REFERENCE_CHILD_OF, spanContext);\n}\n\n/**\n * Return a new REFERENCE_FOLLOWS_FROM reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_FOLLOWS_FROM reference pointing to `spanContext`\n */\nexport function followsFrom(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof Span) {\n        spanContext = spanContext.context();\n    }\n    return new Reference(Constants.REFERENCE_FOLLOWS_FROM, spanContext);\n}\n"]}
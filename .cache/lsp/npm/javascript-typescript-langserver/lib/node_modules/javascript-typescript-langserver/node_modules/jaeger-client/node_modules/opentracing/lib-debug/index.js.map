{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;AAAA;;IAAY,Y;;AACZ;;IAAY,S;;AACZ;;IAAY,S;;AACZ;;IAAY,I;;AACZ;;IAAY,I;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;AACA;AACA,SAAS,OAAT,CAAiB,MAAjB,EAAyB;AACrB,SAAK,IAAI,QAAQ,CAAjB,EAAoB,QAAQ,UAAU,MAAtC,EAA8C,OAA9C,EAAuD;AACnD,YAAM,SAAS,UAAU,KAAV,CAAf;AACA,aAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AAAE;AACtB,gBAAI,OAAO,cAAP,CAAsB,GAAtB,CAAJ,EAAgC;AAC5B,uBAAO,GAAP,IAAc,OAAO,GAAP,CAAd;AACH;AACJ;AACJ;AACD,WAAO,MAAP;AACH;;AAGD;AACA;AACA,OAAO,OAAP,GAAiB,QACb;AACI,2CADJ;AAEI,kCAFJ;AAGI,uCAHJ;AAII,wBAJJ;AAKI,4BALJ;AAMI,UAAgB;AANpB,CADa,EASb,SATa,EAUb,SAVa,EAWb,YAXa,CAAjB;;AAcA;AACA,KAAK,UAAL","file":"index.js","sourcesContent":["import * as GlobalTracer from './global_tracer';\nimport * as Constants from './constants';\nimport * as Functions from './functions';\nimport * as Noop from './noop';\nimport * as Tags from './ext/tags';\nimport BinaryCarrier from './binary_carrier';\nimport Reference from './reference';\nimport SpanContext from './span_context';\nimport Span from './span';\nimport Tracer from './tracer';\n\n// Object.assign() is not available on Node v0.12, so implement a similar\n// function here (subset of a proper polyfill).\nfunction _extend(target) {\n    for (let index = 1; index < arguments.length; index++) {\n        const source = arguments[index];\n        for (let key in source) { // eslint-disable-line no-restricted-syntax\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\n\n\n// Use `module.exports` rather than `export` to avoid the need to use `.default`\n// when requiring the package in ES5 code.\nmodule.exports = _extend(\n    {\n        BinaryCarrier : BinaryCarrier,\n        Reference     : Reference,\n        SpanContext   : SpanContext,\n        Span          : Span,\n        Tracer        : Tracer,\n        Tags          : Tags,\n    },\n    Constants,\n    Functions,\n    GlobalTracer\n);\n\n// Initialize the noops last to avoid a dependecy cycle between the classes.\nNoop.initialize();\n"]}
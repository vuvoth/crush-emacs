{"version":3,"sources":["../../../src/examples/demo/demo.js"],"names":[],"mappings":";;AAEA;;;;AACA;;;;AAHA;;AAKA,QAAQ,GAAR,CAAY,qBAAZ;;AAEA,IAAM,SAAS,6BAAf;;AAEA,QAAQ,GAAR,CAAY,kBAAZ;AACA,IAAM,SAAS,OAAO,SAAP,CAAiB,aAAjB,CAAf;AACA,OAAO,MAAP,CAAc,QAAd,EAAwB,WAAxB;AACA,OAAO,MAAP,CAAc,OAAd,EAAuB,MAAvB;;AAEA,QAAQ,GAAR,CAAY,2BAAZ;AACA,WAAW,YAAM;AACb,YAAQ,GAAR,CAAY,sBAAZ;AACA,QAAM,QAAQ,OAAO,SAAP,CAAiB,YAAjB,EAA+B,EAAE,SAAS,MAAX,EAA/B,CAAd;AACA,UAAM,MAAN,CAAa,OAAb,EAAsB,KAAtB;AACA,UAAM,MAAN,CAAa,MAAb,EAAqB,IAArB;AACA,UAAM,GAAN,CAAU,EAAC,OAAO,SAAR,EAAV;;AAEA,YAAQ,GAAR,CAAY,YAAZ;AACA,eAAW,YAAM;AACb,gBAAQ,GAAR,CAAY,6BAAZ;AACA,cAAM,GAAN,CAAU,EAAC,OAAO,MAAR,EAAV;AACA,cAAM,MAAN;AACA,eAAO,MAAP;;AAEA;AACA;AACA;AACA,gBAAQ,GAAR,CAAY,UAAZ;AACA,YAAM,SAAS,OAAO,MAAP,EAAf;AACA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAAO,KAAP,CAAa,MAAjC,EAAyC,GAAzC,EAA8C;AAC1C,gBAAM,OAAO,OAAO,KAAP,CAAa,CAAb,CAAb;AACA,gBAAM,OAAO,KAAK,IAAL,EAAb;AACA,gBAAM,UAAU,OAAO,IAAP,CAAY,IAAZ,CAAhB;;AAEA,oBAAQ,GAAR,UAAmB,KAAK,aAAL,EAAnB,WAA6C,KAAK,UAAL,EAA7C;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,GAApC,EAAyC;AACrC,oBAAI,MAAM,QAAQ,CAAR,CAAV;AACA,oBAAI,QAAQ,KAAK,GAAL,CAAZ;AACA,wBAAQ,GAAR,oBAA4B,GAA5B,aAAqC,KAArC;AACH;AACJ;AACJ,KAvBD,EAuBG,GAvBH;AAwBH,CAhCD,EAgCG,IAhCH","file":"demo.js","sourcesContent":["/* eslint-disable */\n\nimport opentracing from '../../..';\nimport { MockTracer } from '../../mock_tracer';\n\nconsole.log('\\nRunning demo...\\n');\n\nconst tracer = new MockTracer();\n\nconsole.log('Starting parent.');\nconst parent = tracer.startSpan('parent_span');\nparent.setTag('custom', 'tag value');\nparent.setTag('alpha', '1000');\n\nconsole.log('Waiting to start child...');\nsetTimeout(() => {\n    console.log('Starting child span.');\n    const child = tracer.startSpan('child_span', { childOf: parent });\n    child.setTag('alpha', '200');\n    child.setTag('beta', '50');\n    child.log({state: \"waiting\"})\n\n    console.log('Waiting...');\n    setTimeout(() => {\n        console.log('Finishing child and parent.')\n        child.log({state: \"done\"})\n        child.finish();\n        parent.finish();\n\n        // Print some information about the two spans. Note the `report` method\n        // is specific to the MockTracer implementation and is not part of the\n        // OpenTracing API.\n        console.log('\\nSpans:');\n        const report = tracer.report();\n        for (let i = 0; i < report.spans.length; i++) {\n            const span = report.spans[i];\n            const tags = span.tags();\n            const tagKeys = Object.keys(tags);\n\n            console.log(`    ${span.operationName()} - ${span.durationMs()}ms`);\n            for (let j = 0; j < tagKeys.length; j++) {\n                let key = tagKeys[j];\n                let value = tags[key];\n                console.log(`        tag '${key}':'${value}'`);\n            }\n        }\n    }, 500);\n}, 1000);\n"]}
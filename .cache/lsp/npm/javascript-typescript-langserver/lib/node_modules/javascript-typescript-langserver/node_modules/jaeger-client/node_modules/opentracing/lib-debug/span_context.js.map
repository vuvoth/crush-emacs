{"version":3,"sources":["../src/span_context.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;;;IAUqB,W;;;;kBAAA,W","file":"span_context.js","sourcesContent":["/**\n * SpanContext represents Span state that must propagate to descendant Spans\n * and across process boundaries.\n *\n * SpanContext is logically divided into two pieces: the user-level \"Baggage\"\n * (see setBaggageItem and getBaggageItem) that propagates across Span\n * boundaries and any Tracer-implementation-specific fields that are needed to\n * identify or otherwise contextualize the associated Span instance (e.g., a\n * <trace_id, span_id, sampled> tuple).\n */\nexport default class SpanContext {\n    // The SpanContext is entirely implementation dependent\n}\n"]}